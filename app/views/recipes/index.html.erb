<div class="container py-4">
  <h1 class="mb-4 text-center">Cooking Recipes</h1>

  <div class="row justify-content-center mb-4">
    <div class="col-md-8">
      <%= form_with url: recipes_path, method: :get, local: true, html: { class: 'input-group' } do %>
        <%= text_field_tag :q, @search_query, placeholder: 'e.g. pasta, chicken...', class: 'form-control', aria: { label: 'Search for a recipe' } %>
        <button class="btn btn-primary" type="submit">Search</button>
      <% end %>
    </div>
  </div>

  <% if @recipes.present? %>
    <div class="row justify-content-center">
      <div class="col-lg-10">
        <% @recipes.each do |recipe| %>
          <div class="card mb-4 shadow-sm border border-primary rounded-4 d-flex flex-row align-items-center recipe-card recipe-preview-div"
            style="min-height: 120px; cursor:pointer; overflow: hidden; background: #f8f9fa; border: 2px solid #007bff;"
            data-recipe-id="<%= recipe[:id] %>"
            data-recipe-url="<%= recipe_path(recipe[:id]) %>">
            <% if recipe[:image_url].present? %>
              <img src="<%= recipe[:image_url] %>" alt="<%= recipe[:title] %>" class="rounded-start" style="width: 90px; height: 90px; object-fit: cover; margin: 16px 0 16px 16px; flex-shrink: 0;">
            <% end %>
            <div class="flex-grow-1 d-flex flex-column justify-content-center ps-3 pe-3 py-2">
              <div class="fw-semibold fs-5 mb-1" style="color: #222;"> <%= recipe[:title] %> </div>
              <div class="text-muted" style="font-size: 1em; text-decoration: none; display: -webkit-box; -webkit-line-clamp: 2; -webkit-box-orient: vertical; overflow: hidden; text-overflow: ellipsis;"> <%= recipe[:ingredients] %> </div>
            </div>
          </div>
        <% end %>
      </div>
    </div>
  <% else %>
    <div class="alert alert-warning text-center" role="alert">
      No recipes found for '<%= @search_query %>'. Try another search!
    </div>
  <% end %>
</div>

<% content_for :scripts do %>
<script>
let recipePreviewHandlerAttached = false;

function handleCardClick(e) {
  const card = e.target.closest('.recipe-preview-div');
  if (!card) return;
  e.preventDefault();
  previewHandler.call(card, e);
}

function previewHandler(e) {
  const modalElement = document.getElementById('recipePreviewModal');
  const modal = bootstrap.Modal.getOrCreateInstance(modalElement);
  const modalBody = document.getElementById('recipePreviewModalBody');
  modal.hide();
  setTimeout(() => {
    const recipeId = this.dataset.recipeId;
    const recipeUrl = this.dataset.recipeUrl;
    const cacheKey = 'preview_' + recipeId;
    const cached = sessionStorage.getItem(cacheKey);
    if (cached) {
      modalBody.innerHTML = cached;
      modal.show();
      return;
    }
    fetch(recipeUrl, { headers: { 'X-Requested-With': 'XMLHttpRequest' } })
      .then(resp => resp.text())
      .then(html => {
        modalBody.innerHTML = html;
        sessionStorage.setItem(cacheKey, html);
        modal.show();
      });
  }, 200);
}

function attachRecipePreviewHandlers() {
  const container = document.querySelector('.col-lg-10');
  if (!container || recipePreviewHandlerAttached) return;
  container.addEventListener('click', handleCardClick);
  recipePreviewHandlerAttached = true;
}

document.addEventListener('DOMContentLoaded', attachRecipePreviewHandlers);
document.addEventListener('turbo:load', attachRecipePreviewHandlers);
</script>
<% end %>
